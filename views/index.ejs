<%- include("partials/header.ejs") %>
<div id="search">
  <form action="/submit" method="post">
    <input type="text" id="pokemonName" name="pokemonName" placeholder="Search for PokÃ©mon" autocomplete="off" required>
    <div id="suggestions"></div>
    <button type="submit">Search</button>
  </form>
</div>

<% if (locals.cards && cards.length > 0) { %> <!-- Check if cards exist and not empty -->
  <div id="results">
  <p><b>Page: </b><%= locals.page %>/<%=locals.totalPages%></p>
  <p><b>Results: </b><%= locals.totalCount%></p>
  </div>
  <hr>

  <div class="main-card-container">
    <% cards.forEach(card => { %>
      <a class="card-text" href="/card-info">
        <div class="card-container">
        <img src= "<%= card.image %>">
        <div class="card-info">
          <p><b>Name:</b> <%= card.name %></p>
          <p><b>Number: </b> <%= card.number %> </p>
          <p><b>Rarity:</b> <%= card.rarity %></p>
          <p><b>HP:</b> <%= card.hp %></p>
          <!-- <p>Type: <%= card.type %></p> -->
          <p><b>Set:</b> <%= card.set %></p>
          <p><b>Artist:</b> <%= card.artist %></p>
          <p><b>AVG Price: </b><b id="money">$<%= card.cardmarketPrice %></b></p>
        </div>
        </div>
      </a>
      <% }) %>
    </div>
  </div>

  <form action="/submit" method="post" class="pagination-form">
    <% if (typeof pokemonName !== 'undefined') { %>
      <input type="hidden" name="pokemonName" value="<%= pokemonName %>">
    <% } %>
    
    <% if (page > 1) { %>
      <button type="submit" name="page" value="<%= page - 1 %>" class="pagination-button">Previous</button>
    <% } %>
  
    <% for (let i = startPage; i <= endPage; i++) { %>
      <button type="submit" name="page" value="<%= i %>" class="pagination-num <%= i === page ? 'active' : '' %>"><%= i %></button>
    <% } %>
  
    <% if (page < totalPages) { %>
      <button type="submit" name="page" value="<%= page + 1 %>" class="pagination-button">Next</button>
    <% } %>
  </form>
<% } %>



<%- include("partials/footer.ejs") %>

<script>
let cardNames = [];

async function loadCardNames() {
  try {
    const response = await fetch('/card-names');
    if (!response.ok) throw new Error('Network response was not ok');
    cardNames = await response.json();
  } catch (error) {
    console.error('Error fetching card names:', error);
  }
}

loadCardNames();

document.getElementById('pokemonName').addEventListener('input', function() {
  const query = this.value.trim().toLowerCase();
  const suggestionsDiv = document.getElementById('suggestions');
  suggestionsDiv.innerHTML = '';

  if (query.length > 0) {
    const filteredNames = cardNames
      .filter(name => name.toLowerCase().includes(query))
      .slice(0, 10); // Limit suggestions to the first 10

    filteredNames.forEach(name => {
      const div = document.createElement('div');
      div.textContent = name;
      div.classList.add('suggestion-item');
      div.addEventListener('click', function() {
        document.getElementById('pokemonName').value = name;
        suggestionsDiv.innerHTML = '';
      });
      suggestionsDiv.appendChild(div);
    });
    suggestionsDiv.style.display = 'block';
  } else {
    suggestionsDiv.style.display = 'none';
  }
});

// Hide suggestions if clicking outside
document.addEventListener('click', function(event) {
  const suggestionsDiv = document.getElementById('suggestions');
  if (!document.getElementById('pokemonName').contains(event.target)) {
    suggestionsDiv.style.display = 'none';
  }
});
</script>
